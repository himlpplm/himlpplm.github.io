D]W@C	WG]TypsW{]tXjp{{ZkK|Y{I|I }pH|JZ|r]W{ssTy^t@hs{yYk {YExypsW{sx\R | {Z]Zi^dEhhhERtdEkgFjt`EQIFjkcY~q]TypsW{]^XyY]Y}wcK~Ys |kGidgIhY~IwI~gt^jdkD}dJigw}w|[wUI{YExypsW{sxFjkcY}Yx SJ{CqYsTypsYQwtQp{{YZS^dXhx`\|J{CqYsTypsYQwJTp{{Zc}J{CqYsTypsYQxZZxf `uywwJssJ}w{J~dsI|g{G{tsIYsH{YExypsW{sxR{Y}YxR{Y~q]TypsW{^`StgY}YxFR\{YExypsW{sxyY]YY{xVb8F_VC@UE\WzqqUy_u[iqyyXjHXyK~KXSy[D{zqqUyqyXRea[[z}qyAs[rWzqq[Qu
JWqyy\W\j_bZRK[We~@juJ_	KjKzCp[qUyqrYRea[[y[~HfX}HXjK K~ jfa}vzDjee~Kivu}Xz ~u}}XXYs_UyqrWz_^Tqzz\THy[D{zqqUyqyGjjb]yX\Y~ES_eXiq[|s\WzqqUy\qFP\a[[z }v}[|s\WzqqUy\qJzX_[dY
uaaqJ}f~W~XqK}KG~K K}qrG~H_E}azCp[qUyqrYWuHHyX\YWuHHy[D{zqqUyqy Vjr^yX\YQ_	GjazCp[qUyqrYW[yyXzYp\ :D^U@A
WD_T{ssW{^vXhs{{YiK~Z{I|J~ZwI{ZGx{ssW{pz[SgcY}Zy|s{CqZqT{ssYSt	IVs{{^_Vw`XPJXVg|BhtI~]IhJy@qYsW{pqZSgcY}Zy|g|g~X|YITX~dckYeG}dx[}p kZw|If^|dQ}gqZ~q]W{pqT{]\Vpy{^VJ{ZGx{ssW{pzDkh`_{Y_Z~|FP^TJkh`PtvSgE~Jy@qYsW{pqZQwIVpy{Zc Jy@qYsW{pqZQxY}Zz|f `v{wuK|csIwyI~dsJ~gyD{tsJ}YqK{YE{{pqT{sx P{}Z}Yx P{}Z~q]W{pqT{^`QteZ}YxEP_{YE{{pqT{sx{Y_ZY{{Tb8F_UA@
UE_UzsrUy_vYiszyXiJZzK~K ~sJv}[q\UyqqUz]uBjqyzZjy[GyzsrUyqz]Q}yX_[WxyTuX_WgKGjj~H]ai DYQ^~GRz\zYDyyqqUzsyBjqyz]aY}Hb[jdi[|evZitPF~vb[is}XXZd[_}Hei]f jXqiszAs[qUzsr[R_fzZ\[T}[q\UyqqUz^qZTuW[|YzDTuXBjG^R[[q\UyqqUz^qDS\a[|Yz~v}[q\UyqqUz^qHyX_[g[
wbaqJ~dvU}XqK~IE}K K~srE}H_E~czAs[qUzsr[TuHHzZ\[TuHHzYDyyqqUzsyUjr^zZ\[R_	GiczAs[qUzsr[T[yzZz[s\ 9F_WCA
PTU
WR

UQR QT 	PUrH[QE]WC
W^QBKCDZ]^^]]UAUQE@ZDJD^CGICWFSBXVSTWBfJ@V^]^WVPVQRWQ 	
UPP
SoU
QRTW

P
VRRWpoU

RSWQP	UTRP	SW
PV
QQU
Q V

WVRQ	RZDF@ART UD_UTP^[G]S^@ZW[F	:D_U@A
P
VUPUWQRR SrSZY\RXF_Q\B^\	W]SAK@FY]]]]^WAVSF@YFIG\@DK@WDPBZUSWUAfIBU]_]WURURPWR 	VPS	SlVRW	QQPoU
QSWQP	VVPS	SU	PV
QRW	Q 	U

WVQSQZDFCCQTUF_UVP\XG]S]BZUXF	9DA]ZS^WUSSVTP  TVR
U
pU^UT_U]^	URURPWR 	VPS	SlVRW	QQPoU
QSWQP	VVPS	SU	PV
QRW	Q 	U

WVQSQZDFCCQTUF_UVP\XG]S]BZUXF	9F_WCA
QPU	VUQ	Q RTr][_[T]W]UR
U\PBJBD[_\^\\UCWPEA[DKF_CFIBUGSCXWQVVBgK@W\\^VWQVPRUQ	WQQQmU	SVSRS mWSQU
RRWUQQQVRUSSVS
W		 UTPP
SXFDB@ S VVG]W US]ZE_Q\AYTZD	8E\VACTRPW
	VRPV	 
SUSpQX[]Q[@QV U\S@J@G[_\\\^VCWSGAYGKF\ADJBUDQC[WQVU@gICW\_\VWRTRQUS
WQSQmW
SVSQQlU

RSWQP	UTRPQW
PV
QQU
Q V

WVRQ	RZDF@ART UD_UTP^[G]S^@ZW[F	:D_U@A
SW
QSP	UWQU Q	RrW_UU^UF[ V\S@IBGY\\\_\V@WSGB[GIF\AFJ@VDQ@[URVU@dKCU\_\UURTPQVS
	WRQ	RmW
SU	PQQmUSRV
PQ	WVRQ	RUQWQSUQ	W
VVPS	S[DGBCSUTD^U VQ^ZF]R\B[WZG	
8F^UA@

UPP

UP
V  	P	sT\UUV_UVPT
U]QBK@FZ_]^]^WCVQE@YFJG^CDKCUFSBZVQWWBfIBV]]^WVPVRPUQ 
VPS
QlUP
PW
T
	U	URoV
QSURP
VTPS
QW	RU
RRW	RU	WUQQQZGDCAQV VF_VTS\XG^Q]@YUXF
	9D\WCA	VW R
WRT  RrT]VU]WUB
U\PBJBD[_\^\\UCWPEA[DKF_CFIBUGSCXWQVVBgK@W\\^VWQVPRUQ	WQQQmURQVT	W	TRmgjWV VSSRWURSWVP	Q l   VTUURQRVQWSQUS
W	UTRP	SXFG@@S UTD]WUQ^ZE_R^A[WZD
:E_UACVE yyqrYW[yyqzIz[G|s[rWz\rHyX\WzGUEdY^Wc
]^@]^^]kYzAGZ Fat\\~k]ZChB_B{@Th`DFxC_WzbESH\FaGRefFj ]TeXQ\zBj [ |f[[|s{zqq[iea[zX_Uy_WDieTFja^jayAtc\WzqzERy zX_UyXb ~KyAtc\WzqzBjqzzqyJ~XqZifzX}q|eaK|fvHieyFiee]~K ~XrG~v}}XeYjei[|s{zqq[ie_[zX_UyXvIz[G|s[rWz\~XUazzqzZTjaFz[G|s[rWz_^TqzzqzSKzCwc_Uyqy Vjr^yX\Wz_DR_fYs yyqrYRu	HTqzzqz\Ree^QeeGj vYs yyqrYPuvQqzzqyDU\WhPzbeUuTFz[G|s[rWz\bASKzzqzRz~Ys yyqrYP ByX\Wz[y|s\9D]WCA	WG{{pqZVY{{pyJ{YE~qZqT{^pJ{Y_T{EWGgZ_Ua__C\\\_  j[xCFYGcsWc_C\R{aiudIRSx` Q{}~I ~^_~|ES{fGkgISdT\VtY{ZG}qYsW{^vXhs{{pzZSgVJVkyFkkY~r x{ssYQt	JVs{{py|tY~r x{ssYSdaZ}YsY|gbX|tZYeG}t^]|` KgdY~du|cD|giDtsJ|wyk]`Z{ZG}qYsW{^vChs{{pyKY{Cvb_T{sxJk [Z}YsYkkfPI{Cvb_T{sxEhkaZ}YsYV }Z~q{{pqZVx^Gh`y{sxEP_{YE~qZqT{]ZFQ aZ}YsYk^\]QdI~^~^{YE~qZqT{^pXVtWZ}YsY~ Tci|fbY~I{Cvb_T{sx P{}Z}YsYVtHI{YE~qZqT{^|ES`y{s{Yvb@
8D@_XR^		P	T QUSP 
R TV PpG@_FB]]_URTPQVS
	WRQ	RmW	
VS	U	QRVmUSRV
PQ	UQWQSUQ	W
VVPS	SUURQRXGF@ART VF]VTS\[E^S^@YU[D
:D\W@C	SQPV 
WR
V  	VpUGSYH[R_UW^Z_\TTS
U]QBK@FZ_]^]^WCVQE@YFJG^CDKCUFSBZVQWWBfIBV]]^WVPVRPUQ 
VPS
QlF_YI]llU

RSWQP	UTRP	SW
PV
QQU
Q V

WVRQ	RZDF@ART UD_UTP^[G]S^@ZW[F	:D_U@A
	US  	WVWQ
  QUrVGSYKYY[^BY\TPT
U]QBK@FZ_]^]^WCVQE@YFJG^CDKCUFSBZVQWWBfIBV]]^WVPVRPUQ 
VPS
QlAU]E^llU

RSWQP	V
Q U P
VRQW	RUTPP
SW
PURQW
R V	
	UURQRXGF@ART VF]VTS\[E^S^@YU[D
:FB]YQ]

USTWQSVRV VUWPU
QVVsTEQ[JZZZ\@[^UWRURTPQVS
	WRQ	RmCW_G_omWSQU
RRWUQQQVRUSSVS
W		 UTPP
SXFDB@ S VVG]W US]ZE_Q\AYTZD	8E\VAC WQTS
T VR
P   	WpJYPF^UQ V\S@IBGY\\\_\V@WSGB[GIF\AFJ@VDQ@[URVU@dKCU\_\UURTPQVS
	WRQ	RmCW_G_omWSQU
RRWUQQQVRUSSVS
W		 UTPP
SXFDB@ S VVG]W US]ZE_Q\AYTZD	89