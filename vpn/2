D]W@C	WG]TypsW{]tXjp{{ZkK|Y{I|I}ZHdYZ|r]W{ssTy^t@hs{yYk {YExypsW{sx\R | {Z]Zi^dEhhhERtdEkgFjt`EQIFjkcY~q]TypsW{]^XyY]YJhY}Y|Z}dgGgUhciYQ~gx^~wkDtZYigcJ}tgigcG{YExypsW{sxFjkcY}Yx SJ{CqYsTypsYQwtQp{{Y[Td`@hgYj`
Y~q]TypsW{^pES]cY}Y{~wY~q]TypsW{^pIyY]Yf[vb`sHJsT}YsIID}JIssK~I]Gc{@sZsW{ssZTtJJ{Z]ZTtJJ{YExypsW{sxUkp\{Z]ZR^Ehc{@sZsW{ssZTZ{{Z{Zs]8F_VC@UE\WzqqUy_u[iqyyXvH}q~K~[H~[zCp[qUyqrYje\YyX\Y}Xa[|s\WzqqUy_[FPa[[yiezYieEizfXQ aEPKDS_PYs_UyqrWz_\YyX\Yj_yjv_[i_iF~f[\j[ uvIeu~HPD}HyKjujIiveKjezz[GyyqrWzqzGjjbY|[zSKzCp[qUyqrYPuvQqzz[	XR DijzXjaYs_UyqrWz\rDS\bY|[y~v~Ys_UyqrWz\rHyX\YgY	wbarH~f}U}XrI~K E}KI~qqJ~H\G~ayAs[rWzqq[TuKJzX_[TuKJz[GyyqrWzqzUjq\zX_[R_
EiayAs[rWzqq[T[zzXy[s\9D]WCA	WG]W{pqT{]t[hpy{ZkH~YyJ|IJ}`JZgY~r_T{ssW{^vChs{{Yi{YE{{pqT{sx_P ~{Z]YP^fhwtF~^bkF[P]}FPx^{ZGx{ssW{pzChs{{Yegx]hgv^~dwhYqG|wd\kJ[}gkG~guKk{hgz^}ghZ|Jy@qYsW{pqZP]d {Y_ZVY~r_T{ssW{]r[VwUY}ZyEVhx^hd~I{CqZqT{ssYQt	JVs{{YaI{CqZqT{ssYQ{}Z}Yxfbu{twH|`qJt{J~gqI~d{G{wu }ZsH{ZGx{ssW{pzPxY}ZzPxY~r_T{ssW{]bQwgY}ZzFP\{ZGx{ssW{pz{Z]YZyxTa8E]VACVG\UyqqUz]uYjqyzZvJ~q}I}qJ}Zv[|s_UzsrUy_vBiszyXizYDyyqqUzsy]R~zZ\[TzzWw[_TeHGih}H|_bjGYR\}GQy\y[GyzsrUyqzBiszyX\^itvjuug~i uF}tvH~[ |wbH|feJ~w~JjX[J}tf~qyApYrUyqq[Q]eyX_[W~[|s_UzsrUy\rZWwT[[yDjuETuvBQY[|s_UzsrUy\rDP^b[[y}t~[|s_UzsrUy\rHzZ\[dY	wacrJ}fuU~ZrK}K E~IK}qqJ}J\E}ayApYrUyqq[WwKHyX_[WwKHy[GyzsrUyqzVhq^yX_[Q]
GjayApYrUyqq[WYzyXy[p^:D\W@C	 STVWQ
WRQRT  SVpK[RG^TA	W]SAK@FY]]]]^WAVSF@YFIG\@DK@WDPBZUSWUAfIBU]_]WURURPWR 	VPS	SlV
SQVW		PUQQWsmV
QSURP
VTPS
QW	RU
RRW	RU	WUQQQZGDCAQV VF_VTS\XG^Q]@YUXF
	9D\WCA	P	TVRV
WRQQ  QrPXZ\QZE_R^A]^
W^QBKCDZ]^^]]UAUQE@ZDJD^CGICWFSBXVSTWBfJ@V^]^WVPVQRWQ 	
UPP
SoU	QW
QSSlV

RQWRR
UTPP
SW
PURQW
R V	
	UURQRXGF@ART VF]VTS\[E^S^@YU[D
:FB]YQ]TVSPUTR  W VQ 
VsU]WW_V^^
VPVQRWQ 	
UPP
SoU	QW
QSSlV

RQWRR
UTPP
SW
PURQW
R V	
	UURQRXGF@ART VF]VTS\[E^S^@YU[D
:D\W@C	S PV	
 UWR
R  QWp^[\YW]T_UQ V\S@IBGY\\\_\V@WSGB[GIF\AFJ@VDQ@[URVU@dKCU\_\UURTPQVS
	WRQ	RmW
SU	PQQmUSRV
PQ	WVRQ	RUQWQSUQ	W
VVPS	S[DGBCSUTD^U VQ^ZF]R\B[WZG	
8F^UA@
 TQRW


UPPU 
 	QVSsS[[^SX@SUV^P@IBD[\^\_\U@UPGB[DKD_AFIBVGQ@XWRTV@dK@W^\\UWQTPRVS	URQRoW	QUPRQoV
QSURP
VTPSSW	RU
RRW	RU	WUQQQZGDCAQV VF_VTS\XG^Q]@YUXF
	9D\WCA	ST	QPRVWRV  RQrT]VU]WFX
U\PBJBD[_\^\\UCWPEA[DKF_CFIBUGSCXWQVVBgK@W\\^VWQVPRUQ	WQQQmU	SVSRSmWSQU
RRWUQQQVRUSSVS
W		 UTPP
SXFDB@ S VVG]W US]ZE_Q\AYTZD	8E\VAC VP
S
VR
U 
R
pV_UVT\UUST	W^QAICFY]^]_]WAUQFBZFID^@GK@WFP@ZUSTWAdJBU^]]UUPUQPWR	URP	SoVP	PU	V

VVQlU

RSWQP	UTRP	SW
PV
QQU
Q V

WVRQ	RZDF@ART UD_UTP^[G]S^@ZW[F	:D_U@A
UU QWQV Q rW_UU^UUA V\S@IBGY\\\_\V@WSGB[GIF\AFJ@VDQ@[URVU@dKCU\_\UURTPQVS
	WRQ	RmWQRU	WW
TPmdhWV	USPQWWQSTUR
Ro TVWVQSQU	RWSSV	S	U
 VTPS
Q[FDBC Q VTG^W VQ]XF_Q\B[TXG	8F_VC@UE{zqq[T[zzqyKy[D~p[qUy\qJzX_UyGVFg[]W`^^B^]\^ hZxBGYEaw^_~h_YCk@\BxBWhcFEx@]TzaGPH_D|bEQeeDi _WeZR\y@i XfXYs yyqrYjebYyX\Wz_TFjeWDia\iazCwc_UyqyGQzyX\WzXa}KzCwc_Uyqy@iqyyqzH}XrXjfyZ~q ebIfuJjezDjef_}K}XqE}v~ ~Xf[iejYs yyqrYje\YyX\WzXuKy[D~p[qUy\}ZVayyqyXWjbDy[D~p[qUy_\WqyyqyPKyAtc\WzqzUjq\zX_Uy_FQ_e[|s{zqq[Qu
JWqyyqy^Qef\RefEi u[|s{zqq[Suu RqyyqzFV\TjSzagVuWDy[D~p[qUy\aCPKyyqy Qz}[|s{zqq[S @zX_Uy[z~p\ :D^U@A
WD x{ssYVZy{s{I{ZG}qYsW{]rI{Z]W{FUGeY_Vc_\@\^__jY{CE[ G`qTa\A_QybjwgKQS{bQx~J	~]\~~FSxdDkdJSgV_Vw[{YE~qZqT{]t[hpy{sxYSdTIVh{EkiZ~q{{pqZQwIVpy{s{ |w}Z~q{{pqZSgcY}ZqZ|d`[|wXZgD}w\^|cHdfZ~gw|aG|dkGwqI|t{k^bY{YE~qZqT{]t@hpy{s{HZy@va]W{pzIkYY}ZqZkhd PJy@va]W{pzFhhcY}ZqZVY~r x{ssYV{\Dhc{{pzFP\{ZG}qYsW{^XEQcY}ZqZk]^^Q fJ~]|]{ZG}qYsW{]r[VwUY}ZqZ~Vcj|e`Z~Jy@va]W{pzPxY}ZqZVwJJ{ZG}qYsW{]~FSc{{pyZvaB	8GB\XQ\

S
V R VSR
PWT SrD@\DA]_\ WQVPRUQ	WQQQmU
	TS
VRQT mWSQU
RRVRUSSVS
W		 UTPP
SWVQSQZDFCCQTUF_UVP\XG]S]BZUXF	9F_WCA
QRP V
UQ	U 	
VrVGP[K[Q]VW]X\\WWS	W^QAICFY]^]_]WAUQFBZFID^@GK@WFP@ZUSTWAdJBU^]]UUPUQPWR	URP	SoF\[J]ooV
QSURP
VTPS
QW	RU
RRW	RU	WUQQQZGDCAQV VF_VTS\XG^Q]@YUXF
	9D\WCA	VSTVWR	  RWrUEPYH[Z[]@Z\WST	W^QAICFY]^]_]WAUQFBZFID^@GK@WFP@ZUSTWAdJBU^]]UUPUQPWR	URP	SoAV_F^ooV
QSURP
U

R WP	U	QRW
P VVPS	SU	PV
QRW	Q 	U

WVQSQZDFCCQTUF_UVP\XG]S]BZUXF	9DA]ZS^ 
	VQTTSPVPU VVTPVRVTpTFSXJYXY\CY]UUQ WQVPRUQ	WQQQm@U\G\mmUSRV
PQ	WVRQ	RUQWQSUQ	W
VVPS	S[DGBCSUTD^U VQ^ZF]R\B[WZG	
8F^UA@
WRVS
	TUP
R  TsHZPE\UR
U\PBJBD[_\^\\UCWPEA[DKF_CFIBUGSCXWQVVBgK@W\\^VWQVPRUQ	WQQQm@U\G\mmUSRV
PQ	WVRQ	RUQWQSUQ	W
VVPS	S[DGBCSUTD^U VQ^ZF]R\B[WZG	
8: