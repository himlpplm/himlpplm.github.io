D]W@C	WG]TypsT{]tXjp{{ZkK|Y{J|I~JJZkZ|r]T{ssTy^tChs{yYk{YExypsT{sx\R |{Z]ZTdZhwtE|^`kFXR]FPx]yZEx{ssTypxChs{y^ckJgi^gD~dK}YQG|t{DjZkgK|g`Yhw}IkJci`{@qYsTypsZP]dyY]ZVZ|r]T{ssTy]p[VwUZZ{Ehhh_S]YE{YExypsT{sxDR x{Z]Z~wcI{YExypsT{sxDSJ{{[cbvgTdwIyw{DZG}wGZT}w{JwZ|r]T{ssTy]`@QI{y]`@QI{@sZsT{ssZT{^Dhc{y^EP]gZ|r]T{ssTy]kZ}Y{JyTB
8F_VC@UE\WzqrUy_u[iqzyXvH}q~K}[azCp[rUyqrYje_YyX\Y}Xb[|s\WzqrUy_[FPb[[yEijaYieEizeXQ aEPKDS_PYs\UyqrWz__YyX\Y}fa[jvrGjHvF~vP~aiXfHf[[jXrD|fj ~vP}vP ~ fz[DyyqrWzqyGjjbY|[ySKzCp[rUyqrYPuuQqzz[
ES__[ia[|s\WzqrUy\qFP\b[[z }v~[|s\WzqrUy\qJzX\[dY
uaarJ}ffW~XrK}KG~KK}KrG~X\H}azCp[rUyqrYWuKHyX\YWuKHy[D{zqrUyqy Vjq^yX\YQ_
GjazCp[rUyqrYW[zyXzYp\:D^U@A	WD_T{psW{^vXhp{{YiK~Y{I|J|`H}g}Z~r]W{pqT{^t@hpy{Yk {ZGx{psW{pz\P | {Y_Zk^dEhkjEPtdEkeFht`EQJFhkcY~r_T{psW{^\X{Y]Y^aD|t{J|aG|tgJ}` k^h[~gWIsD}wzY|^wI}w~Y|ItY{ZGx{psW{pzFhkcY}Zz QJ{CqZqT{psYQtvSp{{Z	@P h\P{[E{ZE{{pqT{pxGP z{Y]Y|waI{ZE{{pqT{pxGQJy{X``veTgG{wyDYDw}GYWwyIwY~r_T{psW{]b@QJ{{]b@QJ{CqZqT{psYV{\Dh`{{^EP^gY~r_T{psW{]iZ}Z{I{T@
8E_UA@
VE_UzsrUz_vYiszzXuJ}s}K|sK~XW[q\UzqqUz]uBiqyzZjz[GyzsrUzqz]Q}zX_[WxyWuX_WgKGij~H]aj DYQ^~GQz\zYDyzqqUzsyBiqyz]y^|fr_~J_YfeJ~JXF}va~sjfWdPi_v[jZbEiXr[~czAp[qUzsr[Q_fzZ\[W}[q\UzqqUz^qZWuW[|YzDj fGWs[s_UzsrUz\rDP^b[|[y}t~[s_UzsrUz\rHzZ\[gY	wacrJ~fuU~ZrK~K E~IK~KqE~Z\H~ayApYrUzqq[WwKHzX_[WwKHz[GyzsrUzqzVhq^zX_[Q]
GiayApYrUzqq[WYzzXy[p^9D\W@C	 STVWR
WRQRT  SVpK[QG^TA	W]SAKCFY]]]]]WAVSF@ZFIG\@GK@WDPBZUSWUAfJBU]_]WURUQPWR 	VPP	SlV
SQVW
	PVQQWpmV
QSUQP
VTPS
QW	RV
RRW	RU
WUQQQZGDCAQV UF_VTP\XG^Q]@ZUXF
	9D_WCA	P
TVRV
WQQQ  QrPXZ\RZE_R^A^^
W]QBKCDZ]]^]]UAVQE@ZDJG^CGICWFSBXVSWWBfJ@V]]^WVPVQRWQ 	
VPP
SlU	RW
QSSlV

RQWRR
VTPP
SW
PURRW
R V	
	UUQQRXGFCART VF]VTS\[E^S]@YU[D
9FB]YQ]TUSPUTR  W VR 
VsU^WW_V^^	VPVQRWQ 	
VPP
SlU	RW
QSSlV

RQWRR
VTPP
SW
PURRW
R V	
	UUQQRXGFCART VF]VTS\[E^S]@YU[D
9D\W@C	S PV	
UWR
R  QWp^[_YW]T_UR V\P@IBGY\\\_\V@WPGB[GIF_AFJ@VGQ@[URVV@dKCU\\\UUQTPQVS
	WRQ	RmW
SU	PRQmUSRV
PQ	WURQ	RVQWQSUQ
W
VVPP	S[DGB@SUTD^U UQ^ZF]R\A[WZG	
8E^UA@
 TQRW


VPPU 
 
QVSsS[[]SX@SUV^P@JBD[\^\\\U@UPGA[DKD_AFIBVGQCXWRTV@gK@W^\\VWQTPRVS	UQQRoW	QVPRQoV
QSUQP
VTPSSW	RV
RRW	RU
WUQQQZGDCAQV UF_VTP\XG^Q]@ZUXF
	9D_WCA	SW	QPRVWQV  QQrT]VU^WFX
 U\PBJBG[_\^\\VCWPEA[GKF_CFJBUGSC[WQVVBgKCW\\^VWQVPQUQ
WQQQmU
SVSRSmWSRU
RQWUQQQVRUSSVS
W
	 VTPP
S[FDB@ S VVG^W US]ZF_Q\AYTZG	8E\VA@ VP
S
VR
V
R
sV_UVT\UVST	W^QAICFZ]^]_]WAUQFBZFJD^@GKCWFP@ZVSTWAdJBV^]]UVPUQPWR
URP
SoVP	PU
V

VVQlV

RSWQP
UTRP
SW
PV
RQU
R V

WURQ	RZGF@ART UD_VTP^[G^S^@ZW[F
:D_U@A	UUQWQV  Q rT_UU^UUB V\P@IBGY\\\_\V@WPGB[GIF_AFJ@VGQ@[URVV@dKCU\\\UUQTPQVS
	WRQ	RmWQQU	WW
TPmdhWV	VSPQWWQSWUR
Qo TVWVQSRU	QWSSV	S	U
 VTPS
Q[FGBC Q UTG^W VQ]XF_R\B[TXG
8F_VC@UE{zqr[T[zzqzKy[D~p[rUy\qJzX\UyGVFd[]W`^^B^]\^hZxBGZEaw^_~k_YCk@\B{BWhcFExC]TzaGPH\D|bEQefDi _WeZR\y@i [fXYsyyqrYjeaYyX\Wz_WFjeWDia\iazCwc\UyqyGQyyX\WzXb}KzCwc\Uyqy@iqzyqzH}XqXjfyZ~qebIfvJjezDjee_}K}XrE}v~ ~Xe[iejYsyyqrYje_YyX\WzXvKy[D~p[rUy\}ZVazyqyXWjaDy[D~p[rUy_\WqzyqyPKzAtc\WzqyUjq\zX\Uy_FQ_f[|s{zqr[Qu
JWqzyqy^Qee\RefEi v[|s{zqr[Suu RqzyqzFV\WjSzagVuTDy[D~p[rUy\aCPKzyqy Qz~[|s{zqr[S @zX\Uy[z~p\:D^U@A	WD x{psYVZy{p{I{ZG}qZsW{]rI{Y]W{FUGeY_Vc__@\^__jY{CF[ G`qTa\A_RybjwgKQS{bQ{~J	~^\~~FS{dDkdJSdV_Vw[{ZE~qZqT{^t[hpy{pxYSdTIVk{EkiZ~r{{pqZQtIVpy{p{ |w}Z~r{{pqZSdcY}ZqZ|g`[|wXZgD}w\^|`HdfZ~dw|aG|gkGwqI|w{k^bY{ZE~qZqT{^t@hpy{p{HZy@vb]W{pzIk YY}ZqZkkd PJy@vb]W{pzFhkcY}ZqZV Y~r x{psYV{\Dh`{{pzFP\{ZG}qZsW{^XEQ cY}ZqZk^^^Q fJ~^|]{ZG}qZsW{]r[VtUY}ZqZ~ Vcj|f`Z~Jy@vb]W{pzP{Y}ZqZVtJJ{ZG}qZsW{]~FS`{{pyZvbB	8GB\XR\

S
V Q VSR
PWT PrD@\DA]_\ WQVPQUQ
WQQQmU

TS
VRQT mWSRU
RQVRUSSVS
W
	 VTPP
SWVQSRZDFCCRTUF_UVP\[G]S]BZU[F	9F_W@A
QRPV
UQ
U	
VrVGP[K[R]VW]X\\TWS	W^QAICFZ]^]_]WAUQFBZFJD^@GKCWFP@ZVSTWAdJBV^]]UVPUQPWR
URP
SoF\[J]loV
QSUQP
VTPS
QW	RV
RRW	RU
WUQQQZGDCAQV UF_VTP\XG^Q]@ZUXF
	9D_WCA	VSTVWQ	  QWrUEPYK[Z[]@Z\TST	W^QAICFZ]^]_]WAUQFBZFJD^@GKCWFP@ZVSTWAdJBV^]]UVPUQPWR
URP
SoAV_F^loV
QSUQP
V

R WP
U	QQW
P VVPP	SU
PV
QRW
Q 	V

WVQSRZDFCCRTUF_UVP\[G]S]BZU[F	9DA]YS^ 

VQTWSPVPU VUTPVRVTpTFSXJZXY\CY]UUQ WQVPQUQ
WQQQm@U\G_mmUSRV
PQ	WURQ	RVQWQSUQ
W
VVPP	S[DGB@SUTD^U UQ^ZF]R\A[WZG	
8E^UA@
WRVS
	TVP
R  TsHZPF\UR
 U\PBJBG[_\^\\VCWPEA[GKF_CFJBUGSC[WQVVBgKCW\\^VWQVPQUQ
WQQQm@U\G_mmUSRV
PQ	WURQ	RVQWQSUQ
W
VVPP	S[DGB@SUTD^U UQ^ZF]R\A[WZG	
89