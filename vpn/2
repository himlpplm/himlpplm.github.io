D]W@C	WG]TypsU{]tXjp{{ZwK~p|I~pJ|JgZ|r]U{ssTy^tBhs{yYk{YExypsU{sx\R |{Z]ZTd[hwtE|^`kFXR]GPx]yZEy{ssTypxBhs{y^t^hdd_~d|X~dhX~^F|tsI~Jkd{J|gtZhtp_i^|_kJxZiZ{AqYsTyps[P]dyY][VZ|r]U{ssTy]pZVwUZZ{DhJ[jp
[~q]TypsU{^pES]c[}Y{~w[~q]TypsU{^pIyY][f[vb`sJdT}YsKID}JKYsD}Y]Hc{@sZsU{ssZTtJH{Z]ZTtJH{YExypsU{sxUkp^{Z]ZR^Ghc{@sZsU{ssZTZ{{Z{Zs]8F_VC@UE\WzqsUy_u[iq{yXjHX{K~KH}KJazCp[sUyqrYje^YyX\Y}Xc[|s\WzqsUy_[FPc[[y P\dQuiQu^S~EizdXQ aEPKDS_PYs]UyqrWz_^YyX\Y} JjfXH~_{F}fTH|qi_vew}XfDjHd[i_vJ~uk }vfz[EyyqrWzqxGjjbY|[xSKzCp[sUyqrYPutQqzz[Ejjy]QxF|KzCp[sUyqrYPuKTqzzXc}KzCp[sUyqrYPz[[yg`tyvvH~asK}vzJfsH|fzIzvsKX~Hz[EyyqrWzqxRz~Y|[xRz~Ys]UyqrWz\`SufY|[xGR \z[EyyqrWzqx yX\Y~[{yVc9D_WCA	WE]W{pqT{_t[hpy{XwH|p|KpK|fkY~r_T{qsW{^vChq{{Yi{[E{{pqT{qx_P ~{X]Yk^fFhjhFPtfFk gEhtbFQKEhkaZ~s]W{pqT{_^[{Y_ZfswvX|XcD|tehq }waJ~ewI|gaGek|^yvs|ge{[E{{pqT{qxEhkaZ}[xQJy@q[sW{pqZQut Spy{[GPtfFVzYF{ZGx{qsW{pzDPx {Y_Z|vcJ{ZGx{qsW{pzDQK{{Xc`wgWg}D{v{GY}GvDYyTv{IuZ~s]W{pqT{\`CQJy{\`CQJy@q[sW{pqZVz^Gh`y{_FP^eZ~s]W{pqT{\kY}ZyJ{UB	8E]VAAVG\U{qqUz]uYhqyzZjJ~XyK}IH|KK~dP[~s_UzsrU{_vBisz{XizYDy{qqUzsy]P~zZ\[P_fiwuD~_bjGYP\}GQy\{[GyzsrU{qzBisz{Xy jZrHv~^gi^|uiF}wjKkK[jJWZ~fy~Jf|Xb^j]zH}qyApYrU{qq[Q]e{X_[W~[~s_UzsrU{\rZWwT[}[yDP]eEQ_	YWg}^~KyApYrU{qq[Pw
KVqyzZbKyApYrU{qq[Px~[}[z}g at{vuJ}crKvyHdrH~fyKztrK}X}JzYDy{qqUzsyPz}[|YyPz}[q\U{qqUz^aQue[|YyGP ^zYDy{qqUzsy {X_[~YzyTc9F_WAA
PTW
WR


UQP QT	PWrH[QE]UC
W\QBKCDZ]\^]]UAWQE@ZDJF^CGICWFSBXVSVWBfJ@V\]^WVPVQRWQ 	
WPP
SmU
QPTW

P
VPRWpoW

RSWQPUTRPSW
PV
SQU
S V

WTRQ	RZFF@AR T UD_WTP^[G_S^@ZW[F:D_U@AP
VUPUWQRP SrQZY\RXF_S\B^\	W]SAKBFY]]]]\WAVSF@[FIG\@FK@WDPBZUSWUAfKBU]_]WURUPPWR 	VPQ	SlVRW	QQPmU
SSWQP	VVPQ	SUPV
QRWQ 	W

WVQSSZDFCCSTUF_UVP\ZG]S]BZUZF	9DA]XS^W
USQVTP  VVR
W
pU^UT_W]^	URUPPWR 	VPQ	SlVRW	QQPmU
SSWQP	VVPQ	SUPV
QRWQ 	W

WVQSSZDFCCSTUF_UVP\ZG]S]BZUZF	9F_WAA
QPW	TUQQRVr][_[T]U]UR
U\PBJBF[_\^\\WCWPEA[FKF_CFKBUGSCZWQVVBgKBW\\^VWQVPPUQWQQQmUSVSRS mWSSU
RPWUQQQVRU
SSVS
W	 WTPP
SZFDB@ S VVG_W US]ZG_Q\AYTZF	8E\VAATPPW
VRPT	
SUSrQX[]Q[@QV W\S@J@G[]\\\^VAWSGAYGKF\ADJBWDQC[WSVU@gICW\_\VWRTRQWS
WQSSmW
SVQQQlW

RSWQPUTRP
QW
PV
SQU
S V

WTRQ	RZFF@AR T UD_WTP^[G_S^@ZW[F:D_U@ASW
QQP	UWQW Q	RrU_UU^UFY V\Q@IBGY\\\_\V@WQGB[GIF^AFJ@VFQ@[URVW@dKCU\]\UUPTPQVS
	WRQ	RmW
SU	PSQmU
SRV
PQ	WTRQ	RWQWQSUQW
VVPQ	S[DGBASU TD^U TQ^ZF]R\@[WZG	
8D^UA@

UPP

WP
V  P	sT\UWV_UVPTU]Q@K@FZ_]\]^WCVQG@YFJG^ADKCUFQBZVQWW@fIBV]]\WVPTRPUS 
VPS
QlWP
PW
T
U	UPoV
QSUPP
VTPS
QW	RW
RRW	RUWUQQQZGDCAQV TF_VTQ\XG^Q]@[UXF
	9D^WCA	TW R

WPT  PrT]VU_WUB
U\PBJBF[_\^\\WCWPEA[FKF_CFKBUGSCZWQVVBgKBW\\^VWQVPPUQWQQQmUPQVT	W	TRmejWV VSQRWUPSWVP	Q l  V TUUPQRVQWSQWS
W	UTRPSXFG@@S UTF]WUQ\ZE_R^A[UZD
:E_WACVEyyqrYW[{yqzIz[E|s[rWz\pHyX\WzGWEdY^Wa
]^@]\^]k[zAGZ Fav\\~k]ZCjB_B{@ThbDFxC_Wz`ESH\FcGRefFj ]TeXQ\xBj [ |fY[|s{zqs[iea[zX]Uy_WDieVFja^ja{Atc\WzqxERy zX]UyXb ~K{Atc\WzqxBjqzzq{J~XqZifxX}q|ecK|fvHie{Fiee]~K~XrG~v}XeYjek[|s{zqs[ie_[zX]UyXvIz[E|s[rWz\|XUazzqxZTjaFz[E|s[rWz_^TqzzqxSKzCwc]Uyqy Vjp^yX\Wz_DR_fYsyyqrYRuHTqzzqx\Ree^QegGj vYsyyqrYPutQqzzq{DU\WhPz`eUuTFz[E|s[rWz\`ASKzzqxRz~YsyyqrYP ByX\Wz[{|s\9D_WCA	WE{{pqZV[{{pyJ{[E~qZqT{\pJ{Y_T{GWGgZ_Wa__C\\\_  j[xCFYGasWc]C\R{akudIRSz` Q{}~K ~^_~ |ES{fGkeISdT\VvY{ZG}q[sW{^vXhq{{pzZSeVJVkyFk kY~r x{qsYQt	JVq{{py|vY~r x{qsYSdaZ}[sY|gbX|vZYeG}v^]|` KedY~du| cD|giDvsJ|wyk_`Z{ZG}q[sW{^vChq{{pyK[{Cvb_T{qxJk [Z}[sYkkfPK{Cvb_T{qxEhkaZ}[sYV }Z~s{{pqZVz^Gh`y{qxEP_{[E~qZqT{_ZFQ aZ}[sYk^\]QdI~^~^{[E~qZqT{\pXVtWZ}[sY~ Tc i|fbY~K{Cvb_T{qx P{}Z}[sYVtHI{[E~qZqT{\|ES`y{q{Yvb@
8F@_XR^		PTQUSP 
R VV PpG@]FB]]_UPTPQVS
	WRQ	RmW	
VSU	QPVmU
SRV
PQ	WQWQSUQW
VVPQ	SUUPQRXGFBART VF]V TS\[E^S\@YU[D
8D\W@C	SQPV
WR
V  	VpUGQYH[R_UW\Z_\TTSU]Q@K@FZ_]\]^WCVQG@YFJG^ADKCUFQBZVQWW@fIBV]]\WVPTRPUS 
VPS
QlF]YI]llW

RSWQPUTRPSW
PV
SQU
S V

WTRQ	RZFF@AR T UD_WTP^[G_S^@ZW[F:D_U@A	US
  	WVWQ
 QUrTGSYKYY[\BY\TPTU]Q@K@FZ_]\]^WCVQG@YFJG^ADKCUFQBZVQWW@fIBV]]\WVPTRPUS 
VPS
QlAW]E^llW

RSWQPV
S U
 P
VRQW	RWTPP
SW
PURSW
R V	
	UUPQRXGFBART VF]V TS\[E^S\@YU[D
8FB]YQ]

WSTWQSVRV VUWPW
QVVsTGQ[JZZZ\B[^UWRUPTPQVS
	WRQ	RmAW_G_omWSSU
RPWUQQQVRU
SSVS
W	 WTPP
SZFDB@ S VVG_W US]ZG_Q\AYTZF	8E\VAA WSTS
TVR
P  	WrJYPF^US V\Q@IBGY\\\_\V@WQGB[GIF^AFJ@VFQ@[URVW@dKCU\]\UUPTPQVS
	WRQ	RmAW_G_omWSSU
RPWUQQQVRU
SSVS
W	 WTPP
SZFDB@ S VVG_W US]ZG_Q\AYTZF	89