D]W@C	WG]TypsW{]tXjp{{ZkK|Y{I|I}pH}tZ|r]W{ssTy^t@hs{yYk {YExypsW{sx\R | {Z]ZT{xVwZ^TdJEhh|I|^`kFXR]EPx]yZE{{ssTypx@hs{y^`[J`ZighY~gt[jwQD|t`ZjpZZ[|gZ]Jgj^ghZsjp{CqYsTypsYP]dyY]YVZ|r]W{ssTy]pXVwUZZ{FVwZCiF\PY
Z|r]W{ssTy]pFQ^cZZ{ |tZ|r]W{ssTy]pJ{Z]ZdXu`csK}gwWZsJ}JGIJ}psGd]D}`{CqYsTypsYVwJIyY]YVwJIyZE{{ssTypx Whp_yY]YP]Fj`{CqYsTypsYVY{yY{Yq^:E_UACVE_UyqrWz_vYjqzzXiJ|XzI}K|XPz[GyyqrWzqzZQebY|[y ~qzCp[qUyqrYRu	HTqzz\T^i_aXQKYTe}BiuH|_
IiKyAs[rWzqq[QebY|[zY}HeZ~H[iKI} i|fb~vyFief}K  jvv ~Xy}u~~X[[|s\WzqqUy_\Wqyy\WJz[GyyqrWzqzEija_zX_[|}GP_fZjqYs_UyqrWz\rDS\bY|[y~v~Ys_UyqrWz\rHyX\YgY	wbarH~f}U}XrI~K E}KI~qqE}f\G~ayAs[rWzqq[TuKJzX_[TuKJz[GyyqrWzqzUjq\zX_[R_
EiayAs[rWzqq[T[zzXy[s\9D]WCA	WG]W{pqT{]t[hpy{ZkH~YyJ|I~YuJ{YE{{pqT{sxXSdaZ}Y{|py@qYsW{pqZSwJVpy{]\Vtb[PI[Vd~AhwJ~^	JhI{CqZqT{ssYSdaZ}Y{|d}|d|[|Z JV[~gakZgD}gzX}skYu|Jd]|gS}dsY~r_T{ssW{^_Vs{{]TI{YE{{pqT{sxGkkb\{Z]Y~~EP]VIkkbPwt Sd	F~I{CqZqT{ssYQt	JVs{{YaI{CqZqT{ssYQ{}Z}Yxfbu{twH|`qJt{J~gqI~d{G{wqK}ZsH{ZGx{ssW{pzPxY}ZzPxY~r_T{ssW{]bQwgY}ZzFP\{ZGx{ssW{pz{Z]YZyxTa8E]VACVG\UyqqUz]uYjqyzZjJ|XyK}I}qJ}J~[|s_UzsrUy_vBiszyXizYDyyqqUzsy]R~zZ\[i_fGihiDRufGjfGjubGPIGjja[q\UyqqUz]_YyX_[|wbJ~Xq}jFieeKiY~HuKgu_jeiF|d~Kifu |w}ZvWKzYDyyqqUzsyGjja[|YySKyApYrUyqq[PwuQqyzY
[S_fZixa]|KyApYrUyqq[Pw
KTqyzZb}KyApYrUyqq[Px~[[z}g atyvuH~srK}vyHdrH|fyEztrJXqJzYDyyqqUzsyRz}[|YyRz}[q\UyqqUz^aSue[|YyGR ^zYDyyqqUzsy yX_[~YzyVc9F_WCA
PTU
WR

UQR QT 	PUrH[QE]WC
W^QBKCDZ]^^]]UAUQE@ZDJD^CGICWFSBXVSTWBfJ@V^]^WVPVQRWQ 	
UPP
SoU
QRTW

P
VRRWpoU

RSWQP	UTRP	SW
PV
QQU
Q V

WVRQ	RZDF@ART UD_UTP^[G]S^@ZW[F	:D_U@A
P
VUPUWQRR SrSZY\RXF_Q\B^\	W]SAK@FY]]]]^WAVSF@YFIG\@DK@WDPBZUSWUAfIBU]_]WURURPWR 	VPS	SlVRW	QQPoU
QSWQP	VVPS	SU	PV
QRW	Q 	U

WVQSQZDFCCQTUF_UVP\XG]S]BZUXF	9DA]ZS^WUSSVTP  TVR
U
pU^UT_U]^	URURPWR 	VPS	SlVRW	QQPoU
QSWQP	VVPS	SU	PV
QRW	Q 	U

WVQSQZDFCCQTUF_UVP\XG]S]BZUXF	9F_WCA
QPU	VUQ	Q RTr][_[T]W]UR
U\PBJBD[_\^\\UCWPEA[DKF_CFIBUGSCXWQVVBgK@W\\^VWQVPRUQ	WQQQmU	SVSRS mWSQU
RRWUQQQVRUSSVS
W		 UTPP
SXFDB@ S VVG]W US]ZE_Q\AYTZD	8E\VACTRPW
	VRPV	 
SUSpQX[]Q[@QV U\S@J@G[_\\\^VCWSGAYGKF\ADJBUDQC[WQVU@gICW\_\VWRTRQUS
WQSQmW
SVSQQlU

RSWQP	UTRPQW
PV
QQU
Q V

WVRQ	RZDF@ART UD_UTP^[G]S^@ZW[F	:D_U@A
SW
QSP	UWQU Q	RrW_UU^UF[ V\S@IBGY\\\_\V@WSGB[GIF\AFJ@VDQ@[URVU@dKCU\_\UURTPQVS
	WRQ	RmW
SU	PQQmUSRV
PQ	WVRQ	RUQWQSUQ	W
VVPS	S[DGBCSUTD^U VQ^ZF]R\B[WZG	
8F^UA@

UPP

UP
V  	P	sT\UUV_UVPT
U]QBK@FZ_]^]^WCVQE@YFJG^CDKCUFSBZVQWWBfIBV]]^WVPVRPUQ 
VPS
QlUP
PW
T
	U	URoV
QSURP
VTPS
QW	RU
RRW	RU	WUQQQZGDCAQV VF_VTS\XG^Q]@YUXF
	9D\WCA	VW R
WRT  RrT]VU]WUB
U\PBJBD[_\^\\UCWPEA[DKF_CFIBUGSCXWQVVBgK@W\\^VWQVPRUQ	WQQQmURQVT	W	TRmgjWV VSSRWURSWVP	Q l   VTUURQRVQWSQUS
W	UTRP	SXFG@@S UTD]WUQ^ZE_R^A[WZD
:E_UACVE yyqrYW[yyqzIz[G|s[rWz\rHyX\WzGUEdY^Wc
]^@]^^]kYzAGZ Fat\\~k]ZChB_B{@Th`DFxC_WzbESH\FaGRefFj ]TeXQ\zBj [ |f[[|s{zqq[iea[zX_Uy_WDieTFja^jayAtc\WzqzERy zX_UyXb ~KyAtc\WzqzBjqzzqyJ~XqZifzX}q|eaK|fvHieyFiee]~K ~XrG~v}}XeYjei[|s{zqq[ie_[zX_UyXvIz[G|s[rWz\~XUazzqzZTjaFz[G|s[rWz_^TqzzqzSKzCwc_Uyqy Vjr^yX\Wz_DR_fYs yyqrYRu	HTqzzqz\Ree^QeeGj vYs yyqrYPuvQqzzqyDU\WhPzbeUuTFz[G|s[rWz\bASKzzqzRz~Ys yyqrYP ByX\Wz[y|s\9D]WCA	WG{{pqZVY{{pyJ{YE~qZqT{^pJ{Y_T{EWGgZ_Ua__C\\\_  j[xCFYGcsWc_C\R{aiudIRSx` Q{}~I ~^_~|ES{fGkgISdT\VtY{ZG}qYsW{^vXhs{{pzZSgVJVkyFkkY~r x{ssYQt	JVs{{py|tY~r x{ssYSdaZ}YsY|gbX|tZYeG}t^]|` KgdY~du|cD|giDtsJ|wyk]`Z{ZG}qYsW{^vChs{{pyKY{Cvb_T{sxJk [Z}YsYkkfPI{Cvb_T{sxEhkaZ}YsYV }Z~q{{pqZVx^Gh`y{sxEP_{YE~qZqT{]ZFQ aZ}YsYk^\]QdI~^~^{YE~qZqT{^pXVtWZ}YsY~ Tci|fbY~I{Cvb_T{sx P{}Z}YsYVtHI{YE~qZqT{^|ES`y{s{Yvb@
8D@_XR^		P	T QUSP 
R TV PpG@_FB]]_URTPQVS
	WRQ	RmW	
VS	U	QRVmUSRV
PQ	UQWQSUQ	W
VVPS	SUURQRXGF@ART VF]VTS\[E^S^@YU[D
:D\W@C	SQPV 
WR
V  	VpUGSYH[R_UW^Z_\TTS
U]QBK@FZ_]^]^WCVQE@YFJG^CDKCUFSBZVQWWBfIBV]]^WVPVRPUQ 
VPS
QlF_YI]llU

RSWQP	UTRP	SW
PV
QQU
Q V

WVRQ	RZDF@ART UD_UTP^[G]S^@ZW[F	:D_U@A
	US  	WVWQ
  QUrVGSYKYY[^BY\TPT
U]QBK@FZ_]^]^WCVQE@YFJG^CDKCUFSBZVQWWBfIBV]]^WVPVRPUQ 
VPS
QlAU]E^llU

RSWQP	V
Q U P
VRQW	RUTPP
SW
PURQW
R V	
	UURQRXGF@ART VF]VTS\[E^S^@YU[D
:FB]YQ]

USTWQSVRV VUWPU
QVVsTEQ[JZZZ\@[^UWRURTPQVS
	WRQ	RmCW_G_omWSQU
RRWUQQQVRUSSVS
W		 UTPP
SXFDB@ S VVG]W US]ZE_Q\AYTZD	8E\VAC WQTS
T VR
P   	WpJYPF^UQ V\S@IBGY\\\_\V@WSGB[GIF\AFJ@VDQ@[URVU@dKCU\_\UURTPQVS
	WRQ	RmCW_G_omWSQU
RRWUQQQVRUSSVS
W		 UTPP
SXFDB@ S VVG]W US]ZE_Q\AYTZD	89