D]W@C	WG]TypsU{]tXjp{{ZkK|Y{K|I~`J}dZ|r]U{ssTy^tBhs{yYk{YExypsU{sx\R |{Z]Zi^dGhhhERtdGkgFjt`GQIFjkc[~q]TypsU{]^XyY][]cD~t{H|cG~tgH}ci^hY~dU}IsF}txY~^wK}t|Y~It[{YExypsU{sxFjkc[}Yx SJ{AqYsTyps[QwtQp{{Y@R h^PxYEyZEy{ssTypxEPxyY][|tcIyZEy{ssTypxEQI{yXb`ugT}gE{t{D}YFtG}Y{UtY}ww[~q]TypsU{^`@SJ{{^`@SJ{AqYsTyps[Vx^Dj`{{]ER^g[~q]TypsU{^kZZ{K{WB
:E_WACVE]UyqrWz_tYjqzzXkJ|XzI}KaH}fU[|s\WzqsUy_u@iq{yXj z[EyyqrWzqx]R} zX][TzyWuZ_TeKEij|H|_aj FYR\~EQx\y[D{zqsUyqy@iq{y_y\|fp_}H_[fgJ}HXD}vc}qjfU|fPi_t[iXbGiXp[}azCp[sUyqrYQ_dyX\YW[|s\WzqsUy\qXWuU[[zFj dGTqYs]UyqrWz\pDS\bY|[{~v~Ys]UyqrWz\pHyX\YgYwbarH~fwU}XrI~KE}KI~[sEf\G~a{As[rWzqs[TuKJzX][TuKJz[EyyqrWzqxUjq\zX][R_
Eia{As[rWzqs[T[zzX{[s\9D_WCA	WE]W{pqT{_t[hpy{XkH~YyJ|KHpJXwY~r_T{qsW{^vChq{{Yi{[E{{pqT{qx_P ~{X]YP^fhutF~^bk F[P]}FPx^{ZGx{qsW{pzChq{{Yek_cGt}K~fc|YuG|u{` k_kG~g[|Xc}wa |XV\}py@q[sW{pqZP_d {Y_ZVY~r_T{qsW{]r[VuUY}ZyEQzx@hteE{[E{{pqT{qxGP z{X]Y|waI{[E{{pqT{qxGQJy{Y``veTfw{wyDXDw}GX{Ww[vwY~r_T{qsW{]b@QK{{]b@QK{CqZqT{qsYV{\Dha{{^EP_gY~r_T{qsW{]iZ}[{I{T@
8D_UA@
WE_UzsrU{_vYisz{XuJ}s|K~s|qyApYrU{qq[jg_Y{X_[}Zb[~s_UzsrU{_XDPb[}[zigyYkeGixeXS bGPIDQ_S[q\U{qqUz]_Y{X_[itiX|fX[idrFHuK}IXr_d_ZkHuF}w}YkH[H~JaX|vbZzYDy{qqUzsyGhja[|YyQKyApYrU{qq[PwuSqyzY
^V_fKVc[~s_UzsrU{\rDP^b[}[y}t~[~s_UzsrU{\rHzZ\[fY	wacrJf}U~ZrKK E~IK[qE|d\EayApYrU{qq[WwKH{X_[WwKH{[GyzsrU{qzVhq^{X_[Q]
GhayApYrU{qq[WYz{Xy[p^8D\W@C	 STVWS
WRQRT  SVpK[PG^TA	W]SAKBFY]]]]\WAVSF@[FIG\@FK@WDPBZUSWUAfKBU]_]WURUPPWR 	VPQ	SlV
SQVW	PWQQWqmV
QSUPP
VTPS
QW	RW
RRW	RUWUQQQZGDCAQV TF_VTQ\XG^Q]@[UXF
	9D^WCA	PTVRV

WPQQ  QrPXZ\SZE_R^A_^
W\QBKCDZ]\^]]UAWQE@ZDJF^CGICWFSBXVSVWBfJ@V\]^WVPVQRWQ 	
WPP
SmU	SW
QSSlV

RQW
RR
WTPP
SW
PURSW
R V	
	UUPQRXGFBART VF]V TS\[E^S\@YU[D
8FB]YQ]TTSPUTR  W VS 
VsU_WW_V^^VPVQRWQ 	
WPP
SmU	SW
QSSlV

RQW
RR
WTPP
SW
PURSW
R V	
	UUPQRXGFBART VF]V TS\[E^S\@YU[D
8D\W@C	S PV	
UWR
R   QWp^[^YW]T_US V\Q@IBGY\\\_\V@WQGB[GIF^AFJ@VFQ@[URVW@dKCU\]\UUPTPQVS
	WRQ	RmW
SU	PSQmU
SRV
PQ	WTRQ	RWQWQSUQW
VVPQ	S[DGBASU TD^U TQ^ZF]R\@[WZG	
8D^UA@
 TQRW


WPPU 
 QVSsS[[\SX@SUV^P@KBD[\^\]\U@UPG@[DKD_AFIBVGQBXWRTV@fK@W^\\WWQTPRVS 	UPQRoW	QWPRQoV
QSUPP
VTPSSW	RW
RRW	RUWUQQQZGDCAQV TF_VTQ\XG^Q]@[UXF
	9D^WCA	SV	QPR
VWPV  PQrT]VU_WFX
U\PBJBF[_\^\\WCWPEA[FKF_CFKBUGSCZWQVVBgKBW\\^VWQVPPUQWQQQmUSVSRSmWSSU
RPWUQQQVRU
SSVS
W	 WTPP
SZFDB@ S VVG_W US]ZG_Q\AYTZF	8E\VAA VP
S
VR
W
R
rV_UVT\UWST	W^QAICF[]^]_]WAUQFBZFKD^@GKBWFP@ZWSTWAdJBW^]]UWPUQPWRURPSoVP	PUV

VVQlW

RSWQPUTRPSW
PV
SQU
S V

WTRQ	RZFF@AR T UD_WTP^[G_S^@ZW[F:D_U@AUUQWQV Q rU_UU^UUC V\Q@IBGY\\\_\V@WQGB[GIF^AFJ@VFQ@[URVW@dKCU\]\UUPTPQVS
	WRQ	RmWQPU	W
W
TPmdhWV	WSPQWWQSVUR
Po  TVWVQSSU	PWSSV	S 	U

 VTPS
Q[FFBC Q TTG^W VQ]XF_S\B[TXG8F_VC@UE{zqs[T[zzq{Ky[D~p[sUy\qJzX]UyGVFe[]W`^^B^]\^hZxBG[Eaw^_~j_YCk@\BzBWhcFExB]TzaGPH]D|bEQegDi _WeZR\y@i ZfXYsyyqrYje`YyX\Wz_VFjeWDia\iazCwc]UyqyGQxyX\WzXc}KzCwc]Uyqy@iq{yqzH}XpXjfyZ~qebIfwJjezDjed_}K}XsE}v~ ~Xd[iejYsyyqrYje^YyX\WzXwKy[D~p[sUy\}ZVa{yqyXWj`Dy[D~p[sUy_\Wq{yqyPK{Atc\WzqxUjq\zX]Uy_FQ_g[|s{zqs[Qu
JWq{yqy^Qed\RefEi w[|s{zqs[Suu Rq{yqzFV\VjSzagVuUDy[D~p[sUy\aCPK{yqy Qz[|s{zqs[S @zX]Uy[z~p\:D^U@AWD x{qsYVZy{q{I{ZG}q[sW{]rI{X]W{FUGeY_Vc_^@\^__jY{CG[ G`qTa\A_SybjwgKQS{bQz~J	~_\~~FSzdDkdJSeV_Vw[{[E~qZqT{_t[hpy{qxYSdTIVj{EkiZ~s{{pqZQuIVpy{q{ |w}Z~s{{pqZSecY}ZqZ|f`[|wXZ gD}w\^|aHdfZ~ew|aG|fkGwqI|v{k^bY{[E~qZqT{_t@hpy{q{HZy@vc]W{pzIkYY}ZqZkjd PJy@vc]W{pzFhjcY}ZqZVY~r x{qsYV{\Dha{{pzFP \{ZG}q[sW{^XEQcY}ZqZk_^^Q fJ~_|]{ZG}q[sW{]r[VuUY}ZqZ~Vcj|g`Z~Jy@vc]W{pzPzY}ZqZVuJJ{ZG}q[sW{]~FSa{{pyZvcB	8GB\XS\

S
V P VSR
PWT QrD@\DA]_\ WQVPPUQWQQQmU
TS
VRQT mWSSU
RPVRU
SSVS
W	 WTPP
SWVQSSZDFCCSTUF_UVP\ZG]S]BZUZF	9F_WAA
QRPV

UQU	
VrVGP[K[S]VW]X\\UWS	W^QAICF[]^]_]WAUQFBZFKD^@GKBWFP@ZWSTWAdJBW^]]UWPUQPWRURPSoF\[J]moV
QSUPP
VTPS
QW	RW
RRW	RUWUQQQZGDCAQV TF_VTQ\XG^Q]@[UXF
	9D^WCA	VS
TVWP	  PWrUEPYJ[Z[]@Z\UST	W^QAICF[]^]_]WAUQFBZFKD^@GKBWFP@ZWSTWAdJBW^]]UWPUQPWRURPSoAV_F^moV
QSUPP
W

R WPU	QPW
P VVPQ	SUPV
QRWQ 	W

WVQSSZDFCCSTUF_UVP\ZG]S]BZUZF	9DA]XS^ 
VQTVSPVPU VTTPVRVTpTFSXJ[XY\CY]UUQ WQVPPUQWQQQm@U\G^mmU
SRV
PQ	WTRQ	RWQWQSUQW
VVPQ	S[DGBASU TD^U TQ^ZF]R\@[WZG	
8D^UA@
WRVS
	TWP
R  TsHZPG\UR
U\PBJBF[_\^\\WCWPEA[FKF_CFKBUGSCZWQVVBgKBW\\^VWQVPPUQWQQQm@U\G^mmU
SRV
PQ	WTRQ	RWQWQSUQW
VVPQ	S[DGBASU TD^U TQ^ZF]R\@[WZG	
88